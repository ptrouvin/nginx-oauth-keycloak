worker_processes  1;
daemon off;
pid /opt/nginx-oauth-keycloak/run/nginx.pid;
error_log /dev/stderr warn;

events{
  worker_connections 32;
}

http {

	default_type  text/html;
	access_log /dev/stdout;

	# gotten from vm_on_azure:/etc/resolv.conf, could be google DNS resolver 8.8.8.8 or 8.8.4.4
	#resolver 168.63.129.16:53;

	upstream keycloak {
	  ip_hash;
	  server keycloak:8080 max_fails=3 fail_timeout=20 weight=1;
	}


	lua_package_path "/opt/nginx-oauth-keycloak/?.lua;";

  server {

	set_by_lua $my_server_name 'return os.getenv("NGINX_SERVERNAME")';
	set_by_lua $ngo_token_secret 'return os.getenv("NGINX_TOKEN_SECRET")'; # password to protect 
	set $ngo_client_id "nginx-oauth";
	set_by_lua $ngo_secure_cookies 'return os.getenv("NGINX_SECURE_COOKIES")'; # true|false
	set $ngo_user "true";
	set $ngo_email_as_user "true";
	set_by_lua $ngo_groups_required 'return os.getenv("NGINX_GROUPS_REQUIRED")'; # group-test-oauth
	set_by_lua $ngo_rancher 'return os.getenv("NGINX_RANCHER")'; # rancher
	set_by_lua $ngo_keycloak_env 'return os.getenv("NGINX_KEYCLOAK_ENV")'; # CAMP
	
    listen              8080;
    server_name         $my_server_name;


    uninitialized_variable_warn off;

    #set $ngo_tenant_id "c69f849e-7486-400c-a6c0-66255342b7e6";
    set $ngo_debug "true";
	set $session_cookie_httponly "false"; # required
    set $session_cipher "none";
    set $ngo_callback_url "http://$my_server_name:8080";
	set $ngo_callback_auth "$ngo_callback_url/auth/realms/$ngo_keycloak_env/protocol/openid-connect/auth?client_id=$ngo_client_id";
	set $ngo_callback_logout "$ngo_callback_url/auth/realms/$ngo_keycloak_env/protocol/openid-connect/logout";
	
	# URL to keycloak token request 
	set $ngo_callback_token "$ngo_callback_url/auth/realms/$ngo_keycloak_env/protocol/openid-connect/token";

    location /auth {
		proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_pass http://keycloak;
    }

    location / {
		access_by_lua_file "/opt/nginx-oauth-keycloak/access.lua";
		proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr:$remote_port;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
		proxy_pass http://$ngo_rancher:8080;
    }
  
    
	location ~ /signout$ {
		content_by_lua_file "/opt/nginx-oauth-keycloak/logout.lua";
	}

	location ~ /roles$ {
		access_by_lua_file "/opt/nginx-oauth-keycloak/access.lua";

		content_by_lua_file "/opt/nginx-oauth-keycloak/roles.lua";
	}

  }
}

